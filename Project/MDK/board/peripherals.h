/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_edma.h"
#include "fsl_dmamux.h"
#include "fsl_common.h"
#include "fsl_dcp.h"
#include "fsl_gpt.h"
#include "fsl_clock.h"
#include "fsl_qtmr.h"
#include "fsl_tempmon.h"
#include "fsl_lpuart.h"
#include "fsl_lpuart_edma.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Used DMA device. */
#define DMA0_DMA_BASEADDR DMA0
/* Associated DMAMUX device that is used for muxing of requests. */
#define DMA0_DMAMUX_BASEADDR DMAMUX
/* Definition of peripheral ID */
#define DCP_PERIPHERAL DCP
/* Definition of peripheral ID */
#define GPT2_PERIPHERAL GPT2
/* Definition of the clock source frequency */
#define GPT2_CLOCK_SOURCE 75000000UL
/* GPT2 interrupt vector ID (number). */
#define GPT2_GPT_IRQN GPT2_IRQn
/* GPT2 interrupt vector priority. */
#define GPT2_GPT_IRQ_PRIORITY 6
/* GPT2 interrupt handler identifier. */
#define GPT2_GPT_IRQHANDLER GPT2_IRQHandler
/* Definition of peripheral ID */
#define PULSEENCODER_PERIPHERAL TMR1
/* Definition of the timer channel Channel_0. */
#define PULSEENCODER_CHANNEL_0_CHANNEL kQTMR_Channel_0
/* Definition of the timer channel Channel_2. */
#define PULSEENCODER_CHANNEL_2_CHANNEL kQTMR_Channel_2
/* Definition of the timer channel Channel_0 clock source frequency. */
#define PULSEENCODER_CHANNEL_0_CLOCK_SOURCE 1UL
/* Definition of the timer channel Channel_2 clock source frequency. */
#define PULSEENCODER_CHANNEL_2_CLOCK_SOURCE 10UL
/* Definition of peripheral ID */
#define TEMPMON_PERIPHERAL TEMPMON
/* Definition of peripheral ID */
#define TMR2_PERIPHERAL TMR2
/* Definition of the timer channel Channel_3. */
#define TMR2_CHANNEL_3_CHANNEL kQTMR_Channel_3
/* Definition of the timer channel Channel_3 clock source frequency. */
#define TMR2_CHANNEL_3_CLOCK_SOURCE 18750000UL
/* Definition of peripheral ID */
#define COMMUNICATE_PERIPHERAL LPUART5
/* Definition of the clock source frequency */
#define COMMUNICATE_CLOCK_SOURCE 80000000UL
/* communicate eDMA source request. */
#define COMMUNICATE_RX_DMA_REQUEST kDmaRequestMuxLPUART5Rx
/* Selected eDMA channel number. */
#define COMMUNICATE_RX_DMA_CHANNEL 5
/* DMAMUX device that is used for muxing of the request. */
#define COMMUNICATE_RX_DMAMUX_BASEADDR DMAMUX
/* Used DMA device. */
#define COMMUNICATE_RX_DMA_BASEADDR DMA0
/* communicate eDMA source request. */
#define COMMUNICATE_TX_DMA_REQUEST kDmaRequestMuxLPUART5Tx
/* Selected eDMA channel number. */
#define COMMUNICATE_TX_DMA_CHANNEL 6
/* DMAMUX device that is used for muxing of the request. */
#define COMMUNICATE_TX_DMAMUX_BASEADDR DMAMUX
/* Used DMA device. */
#define COMMUNICATE_TX_DMA_BASEADDR DMA0
/* Definition of peripheral ID */
#define SCONSOLE_PERIPHERAL LPUART1
/* Definition of the clock source frequency */
#define SCONSOLE_CLOCK_SOURCE 80000000UL

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const edma_config_t DMA0_config;
/* Common initialization settings */
extern const dcp_config_t DCP_config;
/* User DCP handler */
extern const dcp_handle_t DCP_handle_0;
extern const gpt_config_t GPT2_config;
extern const qtmr_config_t PulseEncoder_Channel_0_config;
extern const qtmr_config_t PulseEncoder_Channel_2_config;
extern const tempmon_config_t TEMPMON_config;
extern const qtmr_config_t TMR2_Channel_3_config;
extern const lpuart_config_t communicate_config;
extern edma_handle_t communicate_RX_Handle;
extern edma_handle_t communicate_TX_Handle;
extern lpuart_edma_handle_t communicate_LPUART_eDMA_Handle;
extern const lpuart_config_t SConsole_config;

/***********************************************************************************************************************
 * Callback functions
 **********************************************************************************************************************/
/* LPUART eDMA callback function for the communicate component (init. function BOARD_InitPeripherals)*/
extern void com_callback(LPUART_Type *,lpuart_edma_handle_t *,status_t ,void *);

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
