/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_edma.h"
#include "fsl_dmamux.h"
#include "fsl_common.h"
#include "fsl_adc.h"
#include "fsl_lpuart.h"
#include "fsl_clock.h"
#include "fsl_lpuart_edma.h"
#include "fsl_gpio.h"
#include "fsl_lpi2c.h"
#include "fsl_qtmr.h"
#include "fsl_tempmon.h"
#include "fsl_pit.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Used DMA device. */
#define DMA0_DMA_BASEADDR DMA0
/* Associated DMAMUX device that is used for muxing of requests. */
#define DMA0_DMAMUX_BASEADDR DMAMUX
/* BOARD_InitPeripherals defines for ADC1 */
/* Definition of peripheral ID */
#define BAT_PERIPHERAL ADC1
/* Definition of special channel interconnected with ADC_ETC which takes real channel to be measured from ADC_ETC. */
#define BAT_CHANNEL_DRIVEN_BY_ADC_ETC 16U
/* Definition of ADC1 channel from configuration #0 9 */
#define BAT 9U
/* BAT interrupt vector ID (number). */
#define BAT_IRQN ADC1_IRQn
/* BAT interrupt vector priority. */
#define BAT_IRQ_PRIORITY 6
/* BAT interrupt handler identifier. */
#define BAT_IRQHANDLER ADC1_IRQHandler
/* Definition of peripheral ID */
#define COM_PERIPHERAL LPUART4
/* Definition of the clock source frequency */
#define COM_CLOCK_SOURCE 80000000UL
/* COM eDMA source request. */
#define COM_RX_DMA_REQUEST kDmaRequestMuxLPUART4Rx
/* Selected eDMA channel number. */
#define COM_RX_DMA_CHANNEL 2
/* DMAMUX device that is used for muxing of the request. */
#define COM_RX_DMAMUX_BASEADDR DMAMUX
/* Used DMA device. */
#define COM_RX_DMA_BASEADDR DMA0
/* COM eDMA source request. */
#define COM_TX_DMA_REQUEST kDmaRequestMuxLPUART4Tx
/* Selected eDMA channel number. */
#define COM_TX_DMA_CHANNEL 1
/* DMAMUX device that is used for muxing of the request. */
#define COM_TX_DMAMUX_BASEADDR DMAMUX
/* Used DMA device. */
#define COM_TX_DMA_BASEADDR DMA0
/* GPIO1 interrupt vector ID (number). */
#define GPIO1_GPIO_COMB_0_15_IRQN GPIO1_Combined_0_15_IRQn
/* GPIO1 interrupt handler identifier. */
#define GPIO1_GPIO_COMB_0_15_IRQHANDLER GPIO1_Combined_0_15_IRQHandler
/* GPIO1 interrupt vector ID (number). */
#define GPIO1_GPIO_COMB_16_31_IRQN GPIO1_Combined_16_31_IRQn
/* GPIO1 interrupt handler identifier. */
#define GPIO1_GPIO_COMB_16_31_IRQHANDLER GPIO1_Combined_16_31_IRQHandler
/* GPIO3 interrupt vector ID (number). */
#define GPIO3_GPIO_COMB_0_15_IRQN GPIO3_Combined_0_15_IRQn
/* GPIO3 interrupt handler identifier. */
#define GPIO3_GPIO_COMB_0_15_IRQHANDLER GPIO3_Combined_0_15_IRQHandler
/* GPIO3 interrupt vector ID (number). */
#define GPIO3_GPIO_COMB_16_31_IRQN GPIO3_Combined_16_31_IRQn
/* GPIO3 interrupt handler identifier. */
#define GPIO3_GPIO_COMB_16_31_IRQHANDLER GPIO3_Combined_16_31_IRQHandler
/* BOARD_InitPeripherals defines for LPI2C1 */
/* Definition of peripheral ID */
#define PGA_PERIPHERAL LPI2C1
/* Definition of clock source */
#define PGA_CLOCK_FREQ 60000000UL
/* Definition of peripheral ID */
#define PULSEENCODER_PERIPHERAL TMR1
/* Definition of the timer channel Channel_0. */
#define PULSEENCODER_CHANNEL_0_CHANNEL kQTMR_Channel_0
/* Definition of the timer channel Channel_2. */
#define PULSEENCODER_CHANNEL_2_CHANNEL kQTMR_Channel_1
/* Definition of the timer channel Channel_0 clock source frequency. */
#define PULSEENCODER_CHANNEL_0_CLOCK_SOURCE 1UL
/* Definition of the timer channel Channel_2 clock source frequency. */
#define PULSEENCODER_CHANNEL_2_CLOCK_SOURCE 1UL
/* Definition of peripheral ID */
#define SLAVE_PERIPHERAL LPUART8
/* Definition of the clock source frequency */
#define SLAVE_CLOCK_SOURCE 80000000UL
/* SLAVE eDMA source request. */
#define SLAVE_RX_DMA_REQUEST kDmaRequestMuxLPUART8Rx
/* Selected eDMA channel number. */
#define SLAVE_RX_DMA_CHANNEL 0
/* DMAMUX device that is used for muxing of the request. */
#define SLAVE_RX_DMAMUX_BASEADDR DMAMUX
/* Used DMA device. */
#define SLAVE_RX_DMA_BASEADDR DMA0
/* Definition of peripheral ID */
#define TEMPMON_PERIPHERAL TEMPMON
/* BOARD_InitPeripherals defines for PIT */
/* Definition of peripheral ID. */
#define PIT_PERIPHERAL PIT
/* Definition of clock source frequency. */
#define PIT_CLK_FREQ 25000000UL
/* Definition of ticks count for channel 0 - deprecated. */
#define PIT_0_TICKS 74999U
/* Definition of ticks count for channel 1 - deprecated. */
#define PIT_1_TICKS 149999U
/* Definition of ticks count for channel 2 - deprecated. */
#define PIT_2_TICKS 249999U
/* PIT interrupt vector ID (number) - deprecated. */
#define PIT_0_IRQN PIT0_IRQn
/* PIT interrupt handler identifier - deprecated. */
#define PIT_0_IRQHANDLER PIT0_IRQHandler
/* PIT interrupt vector ID (number) - deprecated. */
#define PIT_1_IRQN PIT_IRQn
/* PIT interrupt handler identifier - deprecated. */
#define PIT_1_IRQHANDLER PIT1_IRQHandler
/* PIT interrupt vector ID (number) - deprecated. */
#define PIT_2_IRQN PIT_IRQn
/* PIT interrupt handler identifier - deprecated. */
#define PIT_2_IRQHANDLER PIT2_IRQHandler
/* Definition of channel number for channel 0. */
#define PIT_ENCODER_CH kPIT_Chnl_0
/* Definition of channel number for channel 1. */
#define PIT_MOTOR_CH kPIT_Chnl_1
/* Definition of channel number for channel 2. */
#define PIT_STEER_CH kPIT_Chnl_2
/* Definition of ticks count for channel 0. */
#define PIT_ENCODER_CH_TICKS 74999U
/* Definition of ticks count for channel 1. */
#define PIT_MOTOR_CH_TICKS 149999U
/* Definition of ticks count for channel 2. */
#define PIT_STEER_CH_TICKS 249999U
/* PIT interrupt vector ID (number). */
#define PIT_IRQN PIT_IRQn
/* PIT interrupt vector priority. */
#define PIT_IRQ_PRIORITY 2
/* PIT interrupt handler identifier. */
#define PIT_IRQHANDLER PIT_IRQHandler

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const edma_config_t DMA0_config;
extern const adc_config_t BAT_config;
extern const adc_channel_config_t BAT_channels_config[1];
extern const lpuart_config_t COM_config;
extern edma_handle_t COM_RX_Handle;
extern edma_handle_t COM_TX_Handle;
extern lpuart_edma_handle_t COM_LPUART_eDMA_Handle;
extern const lpi2c_master_config_t PGA_masterConfig;
extern const qtmr_config_t PulseEncoder_Channel_0_config;
extern const qtmr_config_t PulseEncoder_Channel_2_config;
extern const lpuart_config_t SLAVE_config;
extern edma_handle_t SLAVE_RX_Handle;
extern lpuart_edma_handle_t SLAVE_LPUART_eDMA_Handle;
extern const tempmon_config_t TEMPMON_config;
extern const pit_config_t PIT_config;

/***********************************************************************************************************************
 * Callback functions
 **********************************************************************************************************************/
/* LPUART eDMA callback function for the SLAVE component (init. function BOARD_InitPeripherals)*/
extern void SlaveCallback(LPUART_Type *,lpuart_edma_handle_t *,status_t ,void *);

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
